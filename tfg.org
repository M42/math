#+TITLE: TFG: links and resources
#+AUTHOR: Mario Rom√°n
#+EMAIL: mromang08@gmail.com

#+OPTIONS: broken-links:mark num:nil
#+LANGUAGE: en
#+SETUPFILE: math-en.setup
#+SETUPFILE: html.setup
#+TODO: TODO WAIT | DONE WONTFIX

* Journal
** June 2017
*** <2017-05-31 Wed>
**** created this file.
**** read MacLane chapter III.2.
*** <2017-06-01 Thu>
**** read https://golem.ph.utexas.edu/category/2006/08/cartesian_closed_categories_an_1.html
**** started reading chapter 4 on Lecture Notes on the lambda calculus by Selinger
**** superficial complete lecture of Selinger
*** <2017-06-02 Fri>
**** read https://bartoszmilewski.com/2016/11/21/monads-programmers-definition/
**** read multiple sections of MacLane
**** wrote a mikrokosmos section
*** <2017-06-03 Sat>
**** read MacLane. Yoneda Lemma
**** exercises from MacLane
*** <2017-06-04 Sun>
**** read I.1.1 to I.1.6 of Hott book
**** installed agda on emacs
*** <2017-06-05 Mon>
**** installed hott-library on agda
**** wrote simple proofs in agda
**** read I.1.10 and I.1.11 of Hott book
*** <2017-06-06 Tue>
**** installed [[https://proofgeneral.github.io/download/][Proofgeneral]] and [[https://coq.inria.fr/][Coq]]
**** completed first chapter exercises of Software Foundations
**** added 'tasty-hunit' tests to mikrokosmos
**** added travis-ci to mikrokosmos
*** <2017-06-07 Wed>
**** read MacLane: monads and algebras
*** <2017-06-08 Thu>
**** exercises from MacLane
*** <2017-06-09 Fri>
**** read Sheaves in geometry and logic
*** <2017-06-10 Sat>
**** applied to EUTypes 2017
*** <2017-06-11 Sun>
**** exercises from chapters 1 and 2 of software foundations
*** <2017-06-12 Mon>
**** created a specific ctlc.org file
**** rewrote tfg.org
Mikrokosmos won't solve the IO problem. If IO is needed,
it can be achieved via scripts.
*** <2017-06-13 Tue>
**** installed Why3
*** <2017-06-14 Wed>
**** installed docker container for Why3 and solvers
**** installed Coq-hott library
*** <2017-06-15 Thu>
**** wrote a jupyter kernel for mikrokosmos
*** <2017-06-16 Fri>
**** minor changes on mikrokosmos
**** wrote mikrokosmos user's guide
*** <2017-06-17 Sat>
**** wrote highlighter for Jupyter Notebook
**** solved minor problems on Jupyter output formatting
**** saw [[https://www.youtube.com/watch?v=21qPOReu4FI][Five Stages of Accepting Constructive Mathematics, by Andrej Bauer]]
**** wrote a section on simply typed lambda calculus
*** <2017-06-18 Sun>
**** started reading Types and programming languages
**** started following the agda tutorial
*** <2017-06-19 Mon>
**** wrote notes on the first lecture on HoTT.
**** wrote notes on the second lecture on HoTT.
*** <2017-06-20 Tue>
**** done homework 1 of the course on HoTT.
**** wrote notes on the third lecture on HoTT.
**** wrote notes on the fourth lecture on HoTT.
*** <2017-06-21 Wed>
**** wrote notes on the fifth lecture on HoTT.
*** <2017-06-22 Thu>
**** wrote notes on the sixth lecture on HoTT.
**** wrote notes on the seventh lecture on HoTT.
**** wrote notes on the eighth lecture on HoTT.
*** <2017-06-23 Fri>
**** wrote notes on the ninth lecture on HoTT.
**** wrote notes on the tenth lecture on HoTT.
**** wrote an org-mode template for the thesis.
*** <2017-06-24 Sat>
**** [[http://orgmode.org/cgit.cgi/org-mode.git/commit/?id=e903288e5080775cbd4d87c69deeba3268cda5c1][fixed bug]] in org-mode
*** <2017-06-25 Sun>
**** wrote notes on the eleventh lecture on HoTT.
**** wrote notes on the twelfth lecture on HoTT.
**** wrote notes on the thirteenth lecture on HoTT.
**** wrote notes on the fourteenth lecture on HoTT.
*** <2017-06-26 Mon>
**** wrote notes on the fiveteenth lecture on HoTT.
*** <2017-06-27 Tue>
**** [[https://math.stackexchange.com/questions/2337093/does-homotopy-type-theory-have-a-computational-interpretation][has HoTT a computational interpretation?]]
*** <2017-06-28 Wed>
*** <2017-06-29 Thu>
**** wrote hott code in agda
*** <2017-06-30 Fri>
**** wrote hott code in agda
** July 2017
*** <2017-07-01 Sat>
*** <2017-07-02 Sun>
**** wrote hott code in agda
*** <2017-07-04 Tue>
**** wrote notes on the 16th lecture on HoTT.
*** <2017-07-05 Wed>
**** wrote notes on the 17th lecture on HoTT.
**** wrote notes on the 18th lecture on HoTT.
*** <2017-07-06 Thu>
**** wrote notes on the 19th lecture on HoTT.
**** wrote notes on the 20th lecture on HoTT.
*** <2017-07-07 Fri>
**** wrote notes on the 21th lecture on HoTT.
**** wrote notes on the 22th lecture on HoTT.
**** wrote notes on the 23th lecture on HoTT.
**** finished course on HoTT.
*** <2017-07-08 Sat>
**** EUTypes 2017. Ohrid, Macedonia.
*** <2017-07-09 Sun>
**** EUTypes 2017. Ohrid, Macedonia.
*** <2017-07-10 Mon>
**** EUTypes 2017. Ohrid, Macedonia.
*** <2017-07-11 Tue>
**** EUTypes 2017. Ohrid, Macedonia.
*** <2017-07-12 Wed>
**** EUTypes 2017. Ohrid, Macedonia.
*** <2017-07-13 Thu>
**** EUTypes 2017. Ohrid, Macedonia.
*** <2017-07-14 Fri>
**** EUTypes 2017. Ohrid, Macedonia.
*** <2017-07-15 Sat>
**** EUTypes 2017. Ohrid, Macedonia.
*** <2017-07-16 Sun>
**** read about the continuum hypothesis
*** <2017-07-17 Mon>
**** solved a bug in the stack tool by updating.
**** mikrokosmos starts using GHC 8.0.2.
**** color and verbose options for mikrokosmos.
**** multiple line format on mikrokosmos.
*** <2017-07-18 Tue>
**** Ski abstraction on mikrokosmos.
*** <2017-07-19 Wed>
**** Ski option for the user.
**** pip-installable jupyter kernel.
*** <2017-07-20 Thu>
**** Closed multiple minor issues on mikrokosmos
*** <2017-07-21 Fri>
**** Read about algebraic Lawvere theories
**** Rewrote installation
**** Rewrote user's guide
**** Mikrokosmos tutorial: part 1
*** <2017-07-22 Sat>
**** Published mikrokosmos v0.3.0
**** Mikrokosmos tutorial: part 2
*** <2017-07-23 Sun>
**** Untyped lambda calculus
*** <2017-07-24 Mon>
**** Wrote: Church-Rosser theorem
**** Wrote: Programming in the untyped \lambda-calculus
*** <2017-07-25 Tue>
**** Types on mikrokosmos
**** Type unification algorithm
**** Type inference algorithm
*** <2017-07-26 Wed>
**** Type normalization algorithm
**** Update tutorial and user's guide
*** <2017-07-29 Sat>
**** Read about Topoi
*** <2017-07-30 Sun>
**** Rewrote STCL using only the implication
**** Wrote a section on Curry typing
*** <2017-07-31 Mon>
**** Wrote about the curry-howard correspondence
**** Implementing generalized STLC types on mikrokosmos
** August 2017
*** <2017-08-01 Tue>
**** Wrote about the curry-howard correspondence
**** Wrote about natural deduction
*** <2017-08-02 Wed>
**** Refactored mikrokosmos code
**** Updated jupyter-kernel
**** Added unicode and agda output to the latex template
*** <2017-08-03 Thu>
**** updated user's guide
**** updated tutorial
**** wrote programming on STLC
*** <2017-08-04 Fri>
**** wrote about normalization and evaluation strategies
*** <2017-08-05 Sat>
**** wrote about categories
*** <2017-08-06 Sun>
**** tried (and failed) to create a debian package for mikrokosmos
*** <2017-08-07 Mon>
**** Wrote about basic category theory
*** <2017-08-08 Tue>
**** Heyting algebras
**** Minor changes to Mikrokosmos
*** <2017-08-09 Wed>
**** Russell's paradox in agda
*** <2017-08-12 Sat>
**** Wrote about Heyting algebras
*** <2017-08-13 Sun>
**** Talk on Categorical foundations by Awodey
*** <2017-08-14 Mon>
**** Notes on categorical foundations
**** Fix minor bugs on mikrokosmos
**** Use macros on latex
*** <2017-08-15 Tue>
**** Created server on Digital ocean
**** Created domain name on Namecheap
**** Created SSL certificate
**** Installed mikrokosmos in the server
**** Installed JupyterHub
**** GitHub OAuth
**** trymikrokosmos.me
*** <2017-08-16 Wed>
**** Wrote 7 tutorials on mikrokosmos
**** Updated libraries on trymikrokosmos.me
**** Minor additions to the category theory chapter
**** Wrote about SKI combinators
**** Wrote about evaluation and output in mikrokosmos
*** <2017-08-17 Thu>
**** Tested mikrokosmos under NixOS
*** <2017-08-18 Fri>
**** Wrote about pure type systems and the lambda cube
*** <2017-08-19 Sat>
**** Wrote about Haskell
**** Wrote about the lambda cube
*** <2017-08-20 Sun>
**** Algebraic theories
**** Models as functors
**** Closed multiple issues on Mikrokosmos
*** <2017-08-21 Mon>
**** Introduction to topos theory
**** Derivatives of regular types and zippers
*** <2017-08-23 Wed>
**** Read An introduction to topos theory.
*** <2017-08-24 Thu>
**** Wrote about dinatural transformations.
*** <2017-09-25 Mon>
*** <2017-09-26 Tue>
**** Experimenting with GHCJS
*** <2017-09-27 Wed>
**** MikrokosmosJS
*** <2017-09-28 Thu>
**** Codemirror pads for MikrokosmosJS
*** <2017-09-29 Fri>
**** Tutorials for mikrokosmos
**** Gentzen deduction trees
*** <2017-09-30 Sat>
**** Mikrokosmos 0.7.0
**** Update libraries
*** <2017-08-31 Thu>
**** Wrote tutorials for Mikrokosmos
** September 2017
*** <2017-09-01 Fri>
**** JupyterHub server on iemath
**** Testing Mikrokosmos on NixOS
*** <2017-09-02 Sat>
**** Lawvere algebraic theories
*** <2017-09-03 Sun>
**** From sets to types to categories to sets
* Notes
** [[file:ctlc.org][Category theory and lambda-calculus]]
** [[file:categoriesfortheworking.org][Categories for the working mathematician - MacLane]]
** [[file:lecturesonthelambdacalculus.org][Lecture notes on the lambda calculus - Selinger]]
** [[file:homotopytypetheory.org][Homotopy type theory - Univalent foundations]]
** [[file:sheavesgeometrylogic.org][Sheaves in geometry and logic - MacLane]]
** [[file:typesandprogramminglanguages.org][Types and programming languages - Pierce]]
** DONE [[file:courseonhott.org][Course on Homotopy Type Theory - Robert Harper]]
** [[file:introcategoricallogic.org][Introduction to categorical logic - Bauer, Awodey]]
* Tasks
** Write
*** Ideas
**** Syntax and semantics
**** Variable capture and deBruijn indices.
*** Mikrokosmos section
*** Untyped lambda calculus section
*** Type theory introduction
*** Category theory introduction
*** Wikipedia
**** Agda
** Read
*** From sets to categories to types to sets
*** Elienberg categorical foundations
*** Extensionality on categories
Commutativity and efficiency

** [#A] Mikrokosmos
Mikrokosmos is a lambda calculus interpreter.

*** TODO Implement type theory http://www.cse.chalmers.se/%7Ebengt/papers/GKminiTT.pdf
*** TODO Implement simply-typed lambda calculus with products and a terminal type
It is the language of CCCs.
It can be showed that it is strongly normalizable.

*** TODO Implement Hindley-Milner or System F
System F has no decidable inference, you have to write more.
Hindley-Milner does not allow for types on quantifiers.

System F and the Girard-Reynolds isomorphism seem like great ideas.

*** TODO [#C] Multiple lines on modules
Multiple line notation should be allowed by joining multiple lines whenever
they start with a <TAB> or a space.
*** TODO Write tests
*** TODO Should Multibimap be a package on its own?
*** Compile to categories
*** Seminars about mikrokosmos
*** Dependent types
http://math.andrej.com/2012/11/08/how-to-implement-dependent-type-theory-i/
*** Write a pygments lexer
http://pygments.org/docs/lexerdevelopment/

*** Emacs theme
*** Logo background should be a "cosmos" background
*** DONE [#A] Module system
The module system is being written.

I should first find every module I have to load and, only then,
load all of them in a single command.

Every module should have a list of DEPENDENCY directives.
*** DONE [#B] Jupyter kernel
[[https://ipython.org/ipython-doc/3/development/kernels.html][Making kernels for IPython]]
[[http://andrew.gibiansky.com/blog/ipython/ipython-kernels/]]
*** WONTFIX Change notation
In order to avoid confusions with types

#+BEGIN_SRC haskell
:load -- !load
qwer != asdf -- qwer ?= asdf
#+END_SRC

*** WONTFIX Use a .mikrokosmos config file
Is it really necessary?

*** WONTFIX Config files
A simply typed mikroskosmos would be great for writing configuration files.

*** WONTFIX compiling mikrokosmos
It could be compiled to C.

*** WONTFIX Write a compiler
Maybe a compiler would work better than an interpreter.

*** WONTFIX Optimizing mikrokosmos in Agda
It seems very difficult to write a mikrokosmos interpreter on Agda.

*** WONTFIX [#C] The IO problem
How to declare an imperative - Wadler

**** syscall proposal
***** Output
#+BEGIN_SRC 
#printNum (\s.\z.(s (s z)))
#+END_SRC

printNum.hs
#+BEGIN_SRC haskell
num :: Lambda -> Int
num Nil = 0
num (Lambda x s) = 1 + printnum s

main :: IO ()
main = do
  l <- read :: Lambda
  print $ printnum l
  return ()
#+END_SRC

***** Input
#+BEGIN_SRC
#readNum ()
#+END_SRC

**** syscall with literals
Add a "literal" type.

***** Output
#+BEGIN_SRC mikrokosmos
churchLiteral n = n (\k . syscall ("increment.sh" k)) "0"
printLiteral l = syscall2 ""
#+END_SRC

***** Input
It would use =$= as an antiliteral. Any string started on =$= would be interpreted as
a lambda term.

#+BEGIN_SRC mikrokosmos
readChurch = syscall "readChurch"
#+END_SRC

=readChurch= would return something as ="@(\s.\z.s (s (s z)))"=. Two literals applied one
over thw other would be reinterpreted as their concatenation.
** [#C] Write articles
*** TODO Adjoint functors post
*** TODO Church-Rosser post
*** TODO Wikipedia article Church-Rosser
** WONTFIX Ask for a type theory book on SO
** WONTFIX Ask for a category theory + lambda calculus book on SO
* Resources
** Books on categories and types for the TFG
*** Books on category theory
**** [[http://www.maths.ed.ac.uk/~aar/papers/maclanecat.pdf][Categories for the working mathematician - Saunders Mac Lane]]
A complete course on category theory.

  * Category theory.
  * Monoidal categories.
  * 2-categories.

**** [[https://github.com/Mzk-Levi/texts/blob/master/Lambek%2520J.,%2520Scott%2520P.J.%2520Introduction%2520to%2520Higher%2520Order%2520Categorical%2520Logic.pdf][Introduction to Higher order categorical logic - Lambek]]
A course in categorical logic.

  * Cartesian closed categories.
  * Type theory and toposes.

**** [[https://s3.amazonaws.com/arena-attachments/325201/2ff932bf546d8985eb613fccf02b69c7.pdf][Conceptual Mathematics: a first introduction to categories - Lawvere]]
A course on category theory, oriented towards categorical logic.

  * Basic cateogory theory
  * Categorical logic, toposes

**** [[http://paultaylor.eu/prafm/][Practical foundations of Mathematics - Paul Taylor]]
A type-oriented foundation of mathematics.

  * Type theory.
  * Cartesian closed categories.
  * Algebra of dependent types.

**** [[http://tocs.ulb.tu-darmstadt.de/35821485.pdf][Sheaves in Geometry and Logic - MacLane, Moerdijk]]
A course on sheaves, topoi and logic. It assumes a categorical background.

  * Grothendieck topologies and sheaves.
  * Topoi and logic.
  * Classifying topoi.

**** [[http://www.mathematik.tu-darmstadt.de/~streicher/CTCL.pdf][Introduction to category theory and categorical logic - Thomas Streicher]]
Basic notions of category theory and a bit on \lambda-calculus,
cartesian-closed categories and toposes.

  * Basic category theory
  * Cartesian closed categories and \lambda-calculus
  * Logic of toposes
  
**** An introduction to topos theory - Kostecki
**** [[http://www.tac.mta.ca/tac/reprints/articles/12/tr12.pdf][Toposes, Triples and Theories - Barr & Wells]]
*** Books on \lambda-calculus
**** [[http://pages.di.unipi.it/ferrari/CORSI/PR2/HarperBook.pdf][Practical foundations for Programming Languages - Robert Harper]]
A complete course on types, syntax and programming languages.

  * Judgements and rules.
  * Levels of syntax.
  * Data types.
  * System F.
  * Types and propositions.
  * Laziness, paralellism and concurrency.

**** Types and programming languages - Benjamin C. Pierce
**** [[http://www.mscs.dal.ca/~selinger/papers/lambdanotes.pdf][Lecture notes on the lambda calculus - Peter Selinger]]
**** [[https://homotopytypetheory.org/book/][Homotopy Type Theory Book - The univalent foundations program]]
The foundational book on homotopy type theory.
**** [[http://pds14.egloos.com/pds/200901/16/93/Lambda-Calculus_and_Combinators.pdf][Lambda Calculus and Combinators. An Introduction - Hindley, Seldin]]
Basic introduction to the \lambda-calculus.

  * Combinatory logic.
  * Formal theories of \lambda-calculus.
  * Typing.
  * Models of \lambda-calculus.

**** [[http://www.cse.chalmers.se/research/group/logic/book/book.pdf][Programming in Martin-L√∂f's Type Theory - Nordstr√∂m, Petersson]]
Martin-L√∂f type theory and how to write languages based on it.
Based on sets.

**** [[https://github.com/pigworker/CS410-14][CS410 Advanced Functional Programming - Connor McBride]]
A course on Agda.

  * Propositions as types.
  * Dependent types.
**** Software foundations - Benjamin C. 
** Blog articles and web pages
*** [[https://hottheory.files.wordpress.com/2012/08/hott2.pdf][hott2.pdf]] - Master thesis on HoTT
*** [[https://en.wikipedia.org/wiki/Typed_lambda_calculus][Typed lambda calculus - Wikipedia]]
The kinds of typed lambda calculi.
http://homepages.inf.ed.ac.uk/wadler/papers/esslli/esslli-1.pdf

A typed lambda calculus in which the user can set the base types
and its constants. If we add products and a terminal type, this is
the language of cartesian closed categories; and a fragment of
intuitionistic logic called minimal logic.

More precisely, there exist functors between the category of Cartesian
closed categories, and the category of simply-typed lambda theories.

Not making assumptions about the type gives us something that behaves
like type variables.

*** https://github.com/Zepheus/SystemF
A SystemF implementation on Haskell following the B. Pierce's book.
*** [[https://ncatlab.org/homotopytypetheory/files/Joyal.pdf][Categorical Homotopy Type Theory - Joyal.pdf]]
*** [[https://homotopytypetheory.org/2011/04/23/running-circles-around-in-your-proof-assistant/][Running Circles Around (In) Your Proof Assistant; or, Quotients that Compute | Homotopy Type Theory]]
How to implement HIT on Agda using Licata's trick.
*** [[http://sweet.ua.pt/dirk/ct2015/slides/Guallart.pdf][Guallart.pdf]] A comparison between ITT and COC
It uses a categorical formulation of STLC similar to H-M.
*** [[http://www.cse.chalmers.se/research/group/logic/Types/tutorials.html][The Types Project]]
*** [[https://en.wikipedia.org/wiki/Intuitionistic_type_theory#Categorical_models_of_type_theory][Intuitionistic type theory - Wikipedia]] - Categorical models
*** [[https://www.microsoft.com/en-us/research/wp-content/uploads/1997/01/henk.pdf][The Henk intermediate language. core.dvi - henk.pdf]]
Based on the lambda cube with a single syntax for terms, types and kinds.
*** [[https://stackoverflow.com/questions/23995736/example-of-type-in-system-f-that-is-not-available-in-hindley-milner-type-inferen][Example of type in System F that is not available in Hindley Milner type inference - Stack Overflow]]
*** [[http://typessummerschool07.cs.unibo.it/courses/coquand-1.pdf][Models of type theory - Coquand]]
*** https://en.wikipedia.org/wiki/Pure_type_system
*** [[http://strictlypositive.org/calculus/][Differential Calculus with Datatypes]]
*** TODO [[http://people.inf.elte.hu/divip/AgdaTutorial/Index.html][Agda Tutorial]]
*** [[https://cs.stackexchange.com/questions/14674/intro-to-martin-l%C3%B6f-type-theory][logic - Intro to Martin-L√∂f type theory - Computer Science Stack Exchange]]

*** [[https://plato.stanford.edu/entries/type-theory-intuitionistic/][Intuitionistic Type Theory (Stanford Encyclopedia of Philosophy)]]
Intuitionistic type theory is thus a typed functional programming
language with the unusual property that all programs terminate.
*** DONE [[https://www.youtube.com/watch?v=21qPOReu4FI][Five Stages of Accepting Constructive Mathematics - Andrej Bauer - YouTube]]
"Taking the Principle of the Excluded Middle from the mathematician... 
is the same as ... prohibiting the boxer the use of his fists."
- /David Hilbert/

 * [[https://en.wikipedia.org/wiki/Brouwer%E2%80%93Hilbert_controversy][Brouwer‚ÄìHilbert controversy - Wikipedia]]

*** [[https://www.quora.com/What-is-the-best-textbook-for-Category-theory][What is the best textbook for category theory - Edward Kmett]]
*** DONE [[https://golem.ph.utexas.edu/category/2006/08/cartesian_closed_categories_an_1.html][CCCs and the Œª-calculus | The n-Category Caf√©]]               :math:
*** [[https://github.com/mattearnshaw/lawvere][mattearnshaw/lawvere: The collected works of F. W. Lawvere]] :logic:math:
*** [[https://www.cs.cmu.edu/~rwh/][Robert Harper's Home Page]]                                  :math:logic:
*** [[http://www.jonmsterling.com/index.html][Notes from Jon Sterling Thought]]                 :math:logic:philosophy:
*** [[http://www2.tcs.ifi.lmu.de/~abel/MscThesisJoakimOhman.pdf][MscThesisJoakimOhman.pdf]] A logical relation for dependent type theory :mikrokosmos:types:logic:
Talks about identity types.
*** [[https://mathoverflow.net/questions/152497/formalizations-of-category-theory-in-proof-assistants][Formalizations of category theory in proof assistants - MathOverflow]] 
*** [[http://strictlypositive.org/Easy.pdf][Easy.pdf]] Simply Easy! - Conor McBride                :mikrokosmos:math:
*** [[https://github.com/lambda-pi-plus/lambda-pi-plus][lambda-pi-plus: A simple Depdently-Typed Language for Research&Learning]] :mikrokosmos:math:
*** [[http://strictlypositive.org/Easy.pdf][Easy.pdf]] Implementation of dependent lambda calculus :math:logic:mikrokosmos:
*** [[https://www2.eecs.berkeley.edu/Pubs/TechRpts/2007/EECS-2007-113.pdf][EECS-2007-113.pdf]] Adam Chipala - Implementing dependent types :types:math:logic:
*** [[http://math.andrej.com/2012/11/08/how-to-implement-dependent-type-theory-i/][How to implement dependent type theory I | Mathematics and Computation]] :math:types:
*** [[http://www.hedonisticlearning.com/posts/category-theory-syntactically.html][Category Theory, Syntactically ]]                            :math:logic:
*** [[https://github.com/Mzk-Levi/texts][Mzk-Levi/texts]] - Type theory and categorical logic texts :math:types:categories:
*** [[http://www.cs.ru.nl/B.Jacobs/CLT/bookinfo.html][Categorical Logic and Type Theory]]               :math:categories:logic:
*** [[https://www.newton.ac.uk/event/bprw01][Computer-aided mathematical proofs]]                   :types:logic:math:
*** [[http://math.ucr.edu/home/baez/topos.html][Topos theory in a nutshell]]
*** [[http://www.logicmatters.net/tyl/][Logic matters]]
*** [[https://mathoverflow.net/questions/69251/is-mac-lane-still-the-best-place-to-learn-category-theory/70891#70891][Is MacLane still the best place to learn category theory?]]
*** Homotopy type theory
**** [[http://dlicata.web.wesleyan.edu/pubs/lb14cubical/lb14cubes-oxford.pdf][A cubical type theory]]
**** [[https://ncatlab.org/homotopytypetheory/files/AwodeyDMVrev.pdf][AwodeyDMVrev.pdf]] Cubical type theory
**** [[http://www.helsinki.fi/lc2015/materials/slides_awodey.pdf][slides_awodey.pdf]] Cubical Type theory
**** [[http://www.cse.chalmers.se/%7Ecoquand/cubicaltt.pdf][Cubical Type Theory - Coquand, Cohen]]
**** [[http://neil-strickland.staff.shef.ac.uk/formal/][Formalised mathematics]] in Agda
**** https://mathoverflow.net/questions/156238/function-extensionality-does-it-make-a-difference-why-would-one-keep-it-out-of/156295#156295
The conversation here between Sterling and Bauer is very interesting.
**** [[http://math.andrej.com/2013/08/28/the-elements-of-an-inductive-type/][The elements of an inductive type | Mathematics and Computation]]
**** [[https://github.com/HoTT/book/issues/460][Path induction again (sorry) ¬∑ Issue #460 ¬∑ HoTT/book]]
**** [[https://www.youtube.com/watch?v=fJJ7NhkySXM][Homotopy Group - (1)Dan Licata, (2)Guillaume Brunerie, (3)Peter Lumsdaine - YouTube]]
**** [[https://homotopytypetheory.org/links/][Links | Homotopy Type Theory]]
**** [[https://agda.readthedocs.io/en/latest/language/cubical.html][Cubical Type Theory in Agda ‚Äî Agda 2.6.0 documentation]]
**** [[http://www-sop.inria.fr/members/Anders.Mortberg/slides/TTT-cubicaltt.pdf][Cubical Type Theory: a constructive interpretation of the univalence axiom - TTT-cubicaltt.pdf]]
** Articles
*** [[http://www.ams.org/notices/201309/rnoti-p1164.pdf][The Univalence Axiom in Homotopy Type Theory]] - Awodey
*** [[http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.207.4309][CiteSeerX ‚Äî Observational Equality, Now!]] - McBride, Altenkirch
*** [[http://www.cse.chalmers.se/~ulfn/papers/tphols09/tutorial.pdf][A brief overview of Agda]] - Ulf Norell
*** [[http://homepages.inf.ed.ac.uk/wadler/papers/propositions-as-types/propositions-as-types.pdf][propositions-as-types.pdf]] Philip Wadler
*** TODO [[http://imps.mcmaster.ca/doc/seven-virtues.pdf][seven-virtues]] Seven virtues of type theory
*** TODO [[http://conal.net/papers/compiling-to-categories/compiling-to-categories.pdf][Compiling to categories]]
** Mikrokosmos resources
*** [[http://www.madore.org/~david/computers/callcc.html][A page about call/cc]]
*** [[http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=3FF1F113BC01E491476F4F1930F838FE?doi=10.1.1.44.1497&rep=rep1&type=pdf][An untyped lambda calculus with IO]]

